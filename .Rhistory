library(readxl)
library(patchwork)
# Pie de página para todas las tablas
footnote <- "Fuente: elaboración propia, Instituto Nacional de Estadísticas "
caenes_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_caenes_final", full.names = T)
ciuo_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_ciuo_final", full.names = T)
# CAENES
auditorias_caenes <- map(caenes_files, ~read_excel(.x)) %>%
map(~.x %>% mutate_at(vars(codigo_c5, codigo_c9, codigo_d5), as.character)) %>%
bind_rows() %>%
mutate(estado_conformidad = estado_conformidad_c5,
estado_conformidad = if_else(!is.na(estado_conformidad_c9), estado_conformidad_c9, estado_conformidad ),
estado_conformidad = if_else(!is.na(estado_conformidad_d5), estado_conformidad_d5, estado_conformidad ),
estado_conformidad = str_trim(tolower(estado_conformidad), side = "both"),
estado_conformidad = str_replace(estado_conformidad, pattern = "  ", " ")) %>%
mutate(conforme = if_else(estado_conformidad == "conforme" |
estado_conformidad == "conforme con observaciones" , 1, 0)) %>%
group_by(mes) %>%
summarise(frecuencia = sum(conforme),
porcentaje = round(sum(conforme) / n() * 100, 1)) %>%
mutate(origen = "total") %>%
mutate(mes = case_when(
mes == 6 ~ "junio",
mes == 7 ~ "julio",
mes == 8 ~ "agosto"
)) %>%
mutate(mes = fct_relevel(mes, "junio", "julio", "agosto")) %>%
arrange(mes)
# CIUO
names(ciuo_files) <- map(ciuo_files, ~str_extract(.x, pattern = "auditoria_.*_ciuo_final"))
auditorias_ciuo <- map(ciuo_files, ~read_excel(.x)) %>%
map(~.x %>% mutate_at(vars(codigo), as.character)) %>%
imap(~.x %>% mutate(mes = .y )  )  %>%
bind_rows() %>%
mutate(mes = str_extract(mes, "junio|julio|agosto")) %>%
mutate(estado_conformidad = str_trim(tolower(estado_conformidad), side = "both"),
estado_conformidad = str_replace(estado_conformidad, pattern = "  ", " ")) %>%
mutate(conforme = if_else(estado_conformidad == "conforme" |
estado_conformidad == "conforme con observaciones" , 1, 0)) %>%
group_by(mes) %>%
summarise(frecuencia = sum(conforme),
porcentaje = round(sum(conforme) / n() * 100, 1)) %>%
mutate(origen = "total") %>%
mutate(mes = fct_relevel(mes, "junio", "julio", "agosto")) %>%
arrange(mes)
plot1 <- auditorias_ciuo %>%
ggplot(aes(mes, porcentaje,  group=1 )) +
geom_point() +
geom_line() +
geom_text(aes(label = round(porcentaje, 1)),
vjust = -1, hjust = 1,
show.legend = FALSE) +
scale_y_continuous(limits = c(68, 92)) +
labs(title = "Auditorías parciales de CIUO",
subtitle = "Cada muestra contiene 150 glosas"
) +
theme(plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5, size = 9))
plot2 <- auditorias_caenes %>%
ggplot(aes(mes, porcentaje,  group=1 )) +
scale_y_continuous(limits = c(68, 92)) +
geom_point() +
geom_line() +
geom_text(aes(label = round(porcentaje, 1)),
vjust = 1.5, hjust = 1,
show.legend = FALSE) +
labs(title = "Auditorías parciales de CAENES",
subtitle = "Cada muestra contiene 150 glosas") +
theme(plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5, size = 9),
)
# Unir ambos gráficos
plots <-  plot1 + plot2
plots <- plots +
plot_annotation(
caption = footnote,
theme = theme(plot.caption  = element_text(hjust = -1))
)
ggsave("imagenes/auditorias_parciales.pdf", width = 7, height = 4, units = "in")
plots
plots <- plots +
plot_annotation(
caption = footnote,
theme = theme(plot.caption  = element_text(hjust = 0))
)
plots <-  plot1 + plot2
plots <- plots +
plot_annotation(
caption = footnote,
theme = theme(plot.caption  = element_text(hjust = 0))
)
plots
plots <-  plot1 + plot2
plots <- plots +
plot_annotation(
caption = footnote,
theme = theme(plot.caption  = element_text(hjust = 0))
)
ggsave("imagenes/auditorias_parciales.pdf", width = 7, height = 4, units = "in")
# Tabla 1
resultado_final_ciuo %>%
kbl(caption = "\\label{ciuo_audi_final}Casos codificados correctamente CIUO-08.CL (muestra de 1.500 casos)" ,
booktabs = T,
align=c(rep('c',times = ncol(resultado_final_ciuo))),
format = "latex") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(latex_options = c("HOLD_position"), full_width = F, font_size = 9.5) %>%
#add_footnote(c(footnote) )
footnote(general_title = "", general = footnote, footnote_as_chunk = T) %>%
# Tabla 2
resultado_final_caenes %>%
kbl(caption =  "\\label{caenes_audi_final}Casos codificados correctamente CAENES (muestra de 1.500 casos)" ,
booktabs = T,
format = "latex",
align=c(rep('c',times = ncol(resultado_final_ciuo)))
) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(latex_options = c("HOLD_position"), full_width = F, font_size = 9.5) %>%
add_footnote(c(footnote) )
# Tabla 1
resultado_final_ciuo %>%
kbl(caption = "\\label{ciuo_audi_final}Casos codificados correctamente CIUO-08.CL (muestra de 1.500 casos)" ,
booktabs = T,
align=c(rep('c',times = ncol(resultado_final_ciuo))),
format = "latex") %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(latex_options = c("HOLD_position"), full_width = F, font_size = 9.5) %>%
#add_footnote(c(footnote) )
footnote(general_title = "", general = footnote, footnote_as_chunk = T)
resultado_final_caenes %>%
kbl(caption =  "\\label{caenes_audi_final}Casos codificados correctamente CAENES (muestra de 1.500 casos)" ,
booktabs = T,
format = "latex",
align=c(rep('c',times = ncol(resultado_final_ciuo)))
) %>%
kable_classic(full_width = F, html_font = "Cambria") %>%
kable_styling(latex_options = c("HOLD_position"), full_width = F, font_size = 9.5) %>%
footnote(general_title = "", general =  "\\\\footnotesize{Probar tamanio}" , footnote_as_chunk = T)
data <- structure(list(Category = c("Internally Managed", "Externally Managed",
"Asset Swaps", "Total"), Percent = c("44.1%", "32.5%", "23.4%",
"100%")), row.names = c(NA, -4L), class = c("tbl_df", "tbl",
"data.frame"))
data
data <- structure(list(Category = c("Internally Managed", "Externally Managed",
"Asset Swaps", "Total"), Percent = c("44.1%", "32.5%", "23.4%",
"100%")), row.names = c(NA, -4L), class = c("tbl_df", "tbl",
"data.frame"))
data %>%
kable(format='latex',booktabs=TRUE, align = 'lr',
caption="Breakdown \\label{Table3}") %>%
kable_styling(latex_options = c("HOLD_position", full_width = T), font_size = 9) %>%
row_spec(0,bold=T,color = 'white', background = '#7c3042') %>%
row_spec(1:4, hline_after = T) %>%
row_spec(4, bold = T) %>%
column_spec(1:2, width = '5cm') %>%
footnote(general = "\\\\tiny{*This is what I want my footnote to be}", threeparttable = TRUE, escape = F)
library(httr)
library(feather)
library(tidyverse)
library(httr)
library(feather)
library(tidyverse)
glosa <- "conductor de uber transporta pasajeros"
glosa <- "gerente de producción dirige equipo"
glosa <- "manipulador de alimentos prepara colaciones"
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = glosa,
classification = "ciuo",
digits = 2)
)
# Revisar el status
httr::status_code(request)
response <- httr::content(request)
# Imprimir resultado
response
caenes <- read_feather("src/data/split_train_test/test.feather")
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = caenes$glosa_caenes[1:10],
classification = "caenes",
digits = 1)
)
# Revisar el status
httr::status_code(request)
# Extraer el contenido
response <- httr::content(request)
# Impimir las dos primeras predicciones
tabla <- map(response[1:5], as.data.frame) %>%
bind_rows()
request <- httr::GET("http://143.198.79.143:8080/download?dataset=caenes")
httr::status_code(request)
dataset_caenes <- httr::content(request)
class(dataset_caenes)
request <- httr::GET("http://143.198.79.143:8080/download?dataset=caenes")
httr::status_code(request)
dataset_caenes <- httr::content(request)
class(dataset_caenes)
df_caenes <- as.data.frame(dataset_caenes)
rm(dataset_caenes)
request <- httr::GET("http://143.198.79.143:8080/download?dataset=caenes")
httr::status_code(request)
dataset_caenes <- httr::content(request)
dataset_caenes$idrph[[1]]
dataset_caenes[[1]]$idrph[[1]]
df_caenes <- as.data.frame(dataset_caenes[[1]])
View(df_caenes)
length(dataset_caenes[[1]])
request <- httr::GET("http://143.198.79.143:8080/download?dataset=caenes")
httr::status_code(request)
dataset_caenes <- httr::content(request)
# La API devuelve un archivo json que es interpretado como una lista en R
class(dataset_caenes)
length(dataset_caenes[[1]])
dim(dataset_caenes[[1]])
length(dataset_caenes[[1]]$idrph )
length(dataset_caenes[[2]]$idrph )
dataset_caenes[[2]]$idrph
length(dataset_caenes[[51352]]$idrph )
dataset_caenes[[51352]]$idrph
# La API devuelve un archivo json que es interpretado como una lista en R
class(dataset_caenes)
httr::status_code(request)
dataset_caenes[[1]]
dataset_caenes[[1]]
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = "una glosa nunca antes vista",
classification = "caenes",
digits = 1)
)
# Revisar el status
httr::status_code(request)
# Extraer el contenido
response <- httr::content(request)
response
library(httr)
library(feather)
library(tidyverse)
glosa <- "conductor de uber transporta pasajeros"
glosa <- "gerente de producción dirige equipo"
glosa <- "manipulador de alimentos prepara colaciones"
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = glosa,
classification = "ciuo",
digits = 2)
)
# Revisar el status
httr::status_code(request)
response <- httr::content(request)
# Imprimir resultado
response
glosa <- "conductor de uber transporta pasajeros"
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = glosa,
classification = "ciuo",
digits = 2)
)
# Revisar el status
httr::status_code(request)
# Extraer el contenido
response <- httr::content(request)
# Imprimir resultado
response
caenes <- read_feather("src/data/split_train_test/test.feather")
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = caenes$glosa_caenes[1:10],
classification = "caenes",
digits = 1)
)
# Revisar el status
httr::status_code(request)
# Extraer el contenido
response <- httr::content(request)
response
tabla <- map(response[1:5], as.data.frame) %>%
bind_rows()
tabla
glosa <- "conductor de uber transporta pasajeros"
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = glosa,
classification = "ciuo",
digits = 2)
)
httr::status_code(request)
response <- httr::content(request)
response
glosa <- "gerente de producción dirige equipo"
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = glosa,
classification = "ciuo",
digits = 2)
)
# Revisar el status
httr::status_code(request)
# Extraer el contenido
response <- httr::content(request)
# Imprimir resultado
response
glosa <- "manipulador de alimentos prepara colaciones"
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = glosa,
classification = "ciuo",
digits = 2)
)
# Revisar el status
httr::status_code(request)
# Extraer el contenido
response <- httr::content(request)
# Imprimir resultado
response
caenes <- read_feather("src/data/split_train_test/test.feather")
dim(caenes)
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = caenes$glosa_caenes[1:10],
classification = "caenes",
digits = 1)
)
httr::status_code(request)
tabla <- map(response[1:5], as.data.frame) %>%
bind_rows()
tabla
caenes <- read_feather("src/data/split_train_test/test.feather")
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = caenes$glosa_caenes[1:10],
classification = "caenes",
digits = 1)
)
# Revisar el status
httr::status_code(request)
# Extraer el contenido
response <- httr::content(request)
tabla <- map(response[1:5], as.data.frame) %>%
bind_rows()
tabla
request <- httr::GET("http://143.198.79.143:8080/download?dataset=caenes")
httr::status_code(request)
dataset_caenes <- httr::content(request)
dataset_caenes[[1]]
request <-  httr::POST("http://143.198.79.143:8080/predict",
encode = "json",
body =  list(text = "asesora del hogar",
classification = "ciuo",
digits = 2))
httr::status_code(request)
request <-  httr::POST("http://10.91.160.65:9090/predict",
encode = "json",
body =  list(text = "asesora del hogar",
classification = "ciuo",
digits = 2))
request <-  httr::POST("http://10.91.160.65:9090/predict",
encode = "json",
body =  list(text = "asesora del hogar",
classification = "ciuo",
digits = 2))
request <-  httr::POST("http://10.91.160.65:9090/predict",
encode = "json",
body =  list(text = "asesora del hogar",
classification = "ciuo",
digits = 2))
httr::status_code(request)
httr::content(request)
knitr::opts_chunk$set(echo = F, warning = F, message = F, fig.align="center")
# Pie de página para todas las tablas
footnote <- "Fuente: elaboración propia, Instituto Nacional de Estadísticas "
caenes_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_caenes_final", full.names = T)
ciuo_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_ciuo_final", full.names = T)
# CAENES
auditorias_caenes <- map(caenes_files, ~read_excel(.x)) %>%
map(~.x %>% mutate_at(vars(codigo_c5, codigo_c9, codigo_d5), as.character)) %>%
bind_rows() %>%
mutate(estado_conformidad = estado_conformidad_c5,
estado_conformidad = if_else(!is.na(estado_conformidad_c9), estado_conformidad_c9, estado_conformidad ),
estado_conformidad = if_else(!is.na(estado_conformidad_d5), estado_conformidad_d5, estado_conformidad ),
estado_conformidad = str_trim(tolower(estado_conformidad), side = "both"),
estado_conformidad = str_replace(estado_conformidad, pattern = "  ", " ")) %>%
mutate(conforme = if_else(estado_conformidad == "conforme" |
estado_conformidad == "conforme con observaciones" , 1, 0)) %>%
group_by(mes) %>%
summarise(frecuencia = sum(conforme),
porcentaje = round(sum(conforme) / n() * 100, 1)) %>%
mutate(origen = "total") %>%
mutate(mes = case_when(
mes == 6 ~ "junio",
mes == 7 ~ "julio",
mes == 8 ~ "agosto"
)) %>%
mutate(mes = fct_relevel(mes, "junio", "julio", "agosto")) %>%
arrange(mes)
library(tidyverse)
# Pie de página para todas las tablas
footnote <- "Fuente: elaboración propia, Instituto Nacional de Estadísticas "
caenes_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_caenes_final", full.names = T)
ciuo_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_ciuo_final", full.names = T)
# CAENES
auditorias_caenes <- map(caenes_files, ~read_excel(.x)) %>%
map(~.x %>% mutate_at(vars(codigo_c5, codigo_c9, codigo_d5), as.character)) %>%
bind_rows() %>%
mutate(estado_conformidad = estado_conformidad_c5,
estado_conformidad = if_else(!is.na(estado_conformidad_c9), estado_conformidad_c9, estado_conformidad ),
estado_conformidad = if_else(!is.na(estado_conformidad_d5), estado_conformidad_d5, estado_conformidad ),
estado_conformidad = str_trim(tolower(estado_conformidad), side = "both"),
estado_conformidad = str_replace(estado_conformidad, pattern = "  ", " ")) %>%
mutate(conforme = if_else(estado_conformidad == "conforme" |
estado_conformidad == "conforme con observaciones" , 1, 0)) %>%
group_by(mes) %>%
summarise(frecuencia = sum(conforme),
porcentaje = round(sum(conforme) / n() * 100, 1)) %>%
mutate(origen = "total") %>%
mutate(mes = case_when(
mes == 6 ~ "junio",
mes == 7 ~ "julio",
mes == 8 ~ "agosto"
)) %>%
mutate(mes = fct_relevel(mes, "junio", "julio", "agosto")) %>%
arrange(mes)
library(readxl)
# Pie de página para todas las tablas
footnote <- "Fuente: elaboración propia, Instituto Nacional de Estadísticas "
caenes_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_caenes_final", full.names = T)
ciuo_files <-  list.files("src/data/auditoria", pattern = "auditoria_.*_ciuo_final", full.names = T)
# CAENES
auditorias_caenes <- map(caenes_files, ~read_excel(.x)) %>%
map(~.x %>% mutate_at(vars(codigo_c5, codigo_c9, codigo_d5), as.character)) %>%
bind_rows() %>%
mutate(estado_conformidad = estado_conformidad_c5,
estado_conformidad = if_else(!is.na(estado_conformidad_c9), estado_conformidad_c9, estado_conformidad ),
estado_conformidad = if_else(!is.na(estado_conformidad_d5), estado_conformidad_d5, estado_conformidad ),
estado_conformidad = str_trim(tolower(estado_conformidad), side = "both"),
estado_conformidad = str_replace(estado_conformidad, pattern = "  ", " ")) %>%
mutate(conforme = if_else(estado_conformidad == "conforme" |
estado_conformidad == "conforme con observaciones" , 1, 0)) %>%
group_by(mes) %>%
summarise(frecuencia = sum(conforme),
porcentaje = round(sum(conforme) / n() * 100, 1)) %>%
mutate(origen = "total") %>%
mutate(mes = case_when(
mes == 6 ~ "junio",
mes == 7 ~ "julio",
mes == 8 ~ "agosto"
)) %>%
mutate(mes = fct_relevel(mes, "junio", "julio", "agosto")) %>%
arrange(mes)
# CIUO
names(ciuo_files) <- map(ciuo_files, ~str_extract(.x, pattern = "auditoria_.*_ciuo_final"))
auditorias_ciuo <- map(ciuo_files, ~read_excel(.x)) %>%
map(~.x %>% mutate_at(vars(codigo), as.character)) %>%
imap(~.x %>% mutate(mes = .y )  )  %>%
bind_rows() %>%
mutate(mes = str_extract(mes, "junio|julio|agosto")) %>%
mutate(estado_conformidad = str_trim(tolower(estado_conformidad), side = "both"),
estado_conformidad = str_replace(estado_conformidad, pattern = "  ", " ")) %>%
mutate(conforme = if_else(estado_conformidad == "conforme" |
estado_conformidad == "conforme con observaciones" , 1, 0)) %>%
group_by(mes) %>%
summarise(frecuencia = sum(conforme),
porcentaje = round(sum(conforme) / n() * 100, 1)) %>%
mutate(origen = "total") %>%
mutate(mes = fct_relevel(mes, "junio", "julio", "agosto")) %>%
arrange(mes)
plot1 <- auditorias_ciuo %>%
ggplot(aes(mes, porcentaje,  group=1 )) +
geom_point() +
geom_line() +
geom_text(aes(label = round(porcentaje, 1)),
vjust = -1, hjust = 1,
show.legend = FALSE) +
scale_y_continuous(limits = c(68, 92)) +
labs(title = "Coincidencia con equipo de Nomenclaturas",
subtitle = "Cada muestra contiene 150 glosas"
) +
theme(plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5, size = 9))
plot2 <- auditorias_caenes %>%
ggplot(aes(mes, porcentaje,  group=1 )) +
scale_y_continuous(limits = c(68, 92)) +
geom_point() +
geom_line() +
geom_text(aes(label = round(porcentaje, 1)),
vjust = 1.5, hjust = 1,
show.legend = FALSE) +
labs(title = "Coincidencia con equipo de Nomenclaturas",
subtitle = "Cada muestra contiene 150 glosas") +
theme(plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5, size = 9),
)
# Unir ambos gráficos
plots <-  plot1 + plot2
plot1
plot1 <- auditorias_ciuo %>%
ggplot(aes(mes, porcentaje,  group=1 )) +
geom_point() +
geom_line() +
geom_text(aes(label = round(porcentaje, 1)),
vjust = -1, hjust = 1,
show.legend = FALSE) +
scale_y_continuous(limits = c(68, 92)) +
labs(title = "Coincidencia entre equipo de codificación y Sección de Nomenclaturas",
subtitle = "Cada muestra contiene 150 glosas"
) +
theme(plot.title = element_text(hjust = 0.5, size = 10),
plot.subtitle = element_text(hjust = 0.5, size = 9))
plot1
install.packages("feather")
